@model IEnumerable<IntraGriegHomolog.Models.CAD_COLABORADOR>

<script>
    // nome para o ajax URL => /Inventario
    // nome para o ajax URL Develop => /Colaborador/

    @{
    /**/

    ViewBag.Title = "Colaborador";
}

    function ValorDrop(valor) {  /// pesquisa drop ajax
        $.ajax({
            type: "GET",
            url: "/Inventario/Colaborador/getDepartment?p=" + valor,
            data: "{}",
            success: function (data) {
                var row = '<option value="-1">Todas os Departamentos</option>';
                for (var i = 0; i < data.length; i++) {
                    row += '<option value="' + data[i].DepartmentID + '">' + data[i].DepartmentName + '</option>';
                }
                $("#departmentsDropdown").html(row);
            }
        });
    }
</script>

<h2>Colaborador</h2>
<hr />

<table>
    @using (Html.BeginForm("index", "Colaborador", FormMethod.Post))
    {
        <tr>
            <th style="padding-right: 10px;"> @Html.DropDownList("emp", (IEnumerable<SelectListItem>)ViewBag.emp, new { @class = "form-control", @id = "emp", @onchange = "ValorDrop(this.value)" })  </th>
            <th style="padding-right: 10px;"> <select class="form-control" id="departmentsDropdown" name="departmentsDropdown"><option value="-1">Todas os Departamentos</option></select>    </th>
            <th style="padding-right: 10px;"> @Html.Editor("UserName", new { htmlAttributes = new { @class = "form-control", @placeholder = "UserName" } })          </th>
            <th style="padding-right: 10px;"> @Html.Editor("Identificador", new { htmlAttributes = new { @class = "form-control", @placeholder = "Identificador" } })</th>
            <th style="padding-right: 10px;"> <button type="submit" class="glyphicon glyphicon-search  btn btn-primary btn-sm"></button>                            </th>
        </tr>
    }
</table>
<hr />
<p>
    @Html.ActionLink(" Novo", "Create", null, new { @class = "glyphicon glyphicon-plus btn btn-primary btn-sm" })

</p>
@*Mensagem erro*@
@if (TempData["erro"] != null)
{
    <div class="@TempData["TypeErro"]" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <span style="color:black">  @TempData["erro"]  </span>
    </div>
}

<div style="display:@( Model.Count() > 0 ? "block" : "none")">
    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CAD_EMP.descs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CAD_DEPT.descs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IN_DESKTOP.identificador)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IN_VOIP.ramal)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.nome)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.passwd)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CAD_EMP.descs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CAD_DEPT.descs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IN_DESKTOP.identificador)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IN_VOIP.ramal)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.nome)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.passwd)
                </td>
                <td>

                    @Html.ActionLink(" ", "Edit", new { id = item.id }, new { @class = "glyphicon glyphicon-pencil btn btn-warning btn-sm" }) |
                    @Html.ActionLink(" ", "Details", new { id = item.id }, new { @class = "glyphicon  glyphicon-eye-open btn btn-primary btn-sm" }) |

                    @Html.ActionLink(" ", "Delete", new { id = item.id }, new { @class = "glyphicon glyphicon glyphicon-remove  btn btn-danger btn-sm" })
                </td>
            </tr>
        }

    </table>
</div>
